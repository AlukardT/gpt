#!/bin/bash

echo "üöÄ MafiaBot - –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Render"
echo "======================================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è git
if ! command -v git &> /dev/null; then
    echo "‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ git –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Node.js
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Node.js
NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 18 ]; then
    echo "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Node.js –≤–µ—Ä—Å–∏–∏ 18 –∏–ª–∏ –≤—ã—à–µ. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $(node -v)"
    exit 1
fi

echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ git
if [ -d ".git" ]; then
    echo "üìÅ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞–π–¥–µ–Ω"
    CURRENT_BRANCH=$(git branch --show-current)
    echo "üåø –¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $CURRENT_BRANCH"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    if [ -n "$(git status --porcelain)" ]; then
        echo "‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è"
        echo "–•–æ—Ç–∏—Ç–µ –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è? (y/n)"
        read -r response
        if [[ "$response" =~ ^[Yy]$ ]]; then
            echo "üíæ –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
            git add .
            echo "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞:"
            read -r commit_message
            git commit -m "$commit_message"
        fi
    fi
else
    echo "üìÅ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "–•–æ—Ç–∏—Ç–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π? (y/n)"
    read -r response
    if [[ "$response" =~ ^[Yy]$ ]]; then
        git init
        git add .
        git commit -m "Initial commit"
        echo "‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"
    else
        echo "‚ùå –î–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ Render –Ω–µ–æ–±—Ö–æ–¥–∏–º git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
        exit 1
    fi
fi

echo ""
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è Render:"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
    if [ -f ".env.example" ]; then
        cp .env.example .env
        echo "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω –∏–∑ .env.example"
        echo "‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏!"
    else
        echo "‚ùå –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json
if [ ! -f "package.json" ]; then
    echo "‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ render.yaml
if [ ! -f "render.yaml" ]; then
    echo "‚ùå render.yaml –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

echo ""
echo "‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –≥–æ—Ç–æ–≤—ã –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ Render:"
echo ""
echo "1. üöÄ –ó–∞–ø—É—à–∏—Ç–µ –∫–æ–¥ –≤ GitHub/GitLab —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:"
echo "   git remote add origin <your-repo-url>"
echo "   git push -u origin main"
echo ""
echo "2. üåê –û—Ç–∫—Ä–æ–π—Ç–µ [Render Dashboard](https://dashboard.render.com)"
echo ""
echo "3. üì¶ –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π Blueprint Instance:"
echo "   - –ù–∞–∂–º–∏—Ç–µ 'New +'"
echo "   - –í—ã–±–µ—Ä–∏—Ç–µ 'Blueprint'"
echo "   - –£–∫–∞–∂–∏—Ç–µ URL –≤–∞—à–µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
echo "   - –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ"
echo ""
echo "4. ‚è≥ –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"
echo ""
echo "5. üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É:"
echo "   - Health check: https://your-app.onrender.com/health"
echo "   - –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: https://your-app.onrender.com/balagan/"
echo ""
echo "üéâ –£–¥–∞—á–∏ —Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º!"